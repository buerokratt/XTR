plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'ee.buerokratt'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.0'
	implementation 'com.github.jknack:handlebars:4.4.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JAX-WS RI (Runtime Implementation) dependencies
	implementation('jakarta.xml.ws:jakarta.xml.ws-api:3.0.1') {
		exclude group: 'javax.ws', module: 'javax.wsdl' // Exclude IBM WSDL implementation
	}

	implementation 'jakarta.xml.soap:jakarta.xml.soap-api'
	implementation 'wsdl4j:wsdl4j'
//	implementation 'jakarta.jws:jakarta.jws-api'

	// JAXB dependencies for handling XML
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1'

	implementation 'io.swagger.core.v3:swagger-annotations:2.2.21' // For annotations approach
	implementation 'io.swagger.core.v3:swagger-core:2.2.21' // For programmatic approach
}

tasks.named('test') {
	useJUnitPlatform()
}


